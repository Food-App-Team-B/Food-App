import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SettingsTab extends JFrame {

    private JComboBox<String> dietRestrictions;
    private List<JCheckBox> allergyCheckboxes;
    private List<String> restrictedFoods; // Stores foods restricted by diet and allergies
    private Map<String, List<String>> dietFoodRestrictions;
    private Map<String, String> allergyFoodMappings;

    public SettingsTab() {
        setTitle("Preferences");
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        getContentPane().setLayout(new BoxLayout(getContentPane(), BoxLayout.Y_AXIS));

        // Initialize the restricted foods list and mappings
        restrictedFoods = new ArrayList<>();
        initializeDietFoodRestrictions();
        initializeAllergyFoodMappings();

        // Allergies section
        JPanel allergiesPanel = new JPanel(new GridLayout(0, 2, 10, 10));
        allergiesPanel.setBorder(BorderFactory.createTitledBorder("Allergies"));
        allergyCheckboxes = new ArrayList<>();
        String[] allergies = {"Nuts", "Dairy", "Gluten", "Eggs", "Seafood"};
        for (String allergy : allergies) {
            JCheckBox checkBox = new JCheckBox(allergy);
            checkBox.addActionListener(e -> updateRestrictedFoodsBasedOnAllergies());
            allergyCheckboxes.add(checkBox);
            allergiesPanel.add(checkBox);
        }
        add(allergiesPanel);

        // Diet Restrictions
        JPanel dietPanel = new JPanel();
        dietPanel.setBorder(BorderFactory.createTitledBorder("Diet Restrictions"));
        String[] diets = {"None", "Vegetarian", "Vegan", "Keto", "Paleo"};
        dietRestrictions = new JComboBox<>(diets);
        dietRestrictions.setMaximumSize(dietRestrictions.getPreferredSize());
        dietPanel.add(dietRestrictions);
        add(dietPanel);

        // Add action listener to diet restrictions combo box
        dietRestrictions.addActionListener(e -> updateRestrictedFoodsBasedOnDiet((String) dietRestrictions.getSelectedItem()));

        // Layout and display adjustments
        alignComponents();
        pack(); // Adjusts the size of the frame to fit its contents
        setLocationRelativeTo(null); // Center the window on the screen
    }

    private void initializeDietFoodRestrictions() {
        dietFoodRestrictions = new HashMap<>();
        dietFoodRestrictions.put("Vegetarian", List.of("Meat", "Fish"));
        dietFoodRestrictions.put("Vegan", List.of("Meat", "Fish", "Dairy", "Eggs"));
        dietFoodRestrictions.put("Keto", List.of("Sugar", "Grains"));
        dietFoodRestrictions.put("Paleo", List.of("Sugar", "Grains", "Dairy"));
        dietFoodRestrictions.put("None", new ArrayList<>());
    }

    private void initializeAllergyFoodMappings() {
        allergyFoodMappings = new HashMap<>();
        allergyFoodMappings.put("Nuts", "Nuts");
        allergyFoodMappings.put("Dairy", "Dairy");
        allergyFoodMappings.put("Gluten", "Gluten");
        allergyFoodMappings.put("Eggs", "Eggs");
        allergyFoodMappings.put("Seafood", "Seafood");
    }

    private void updateRestrictedFoodsBasedOnDiet(String selectedDiet) {
        List<String> restrictions = dietFoodRestrictions.getOrDefault(selectedDiet, new ArrayList<>());
        restrictedFoods.clear();
        restrictedFoods.addAll(restrictions);
        updateRestrictedFoodsBasedOnAllergies(); // Ensure allergy restrictions are also considered
        // Notify other parts of the app about the update
        System.out.println("Updated Restricted Foods: " + restrictedFoods);
    }

    private void updateRestrictedFoodsBasedOnAllergies() {
        // First, add diet restrictions if not already added
        String selectedDiet = (String) dietRestrictions.getSelectedItem();
        List<String> dietRestrictions = this.dietFoodRestrictions.getOrDefault(selectedDiet, new ArrayList<>());
        restrictedFoods.clear();
        restrictedFoods.addAll(dietRestrictions);

        // Add allergy restrictions
        for (JCheckBox checkBox : allergyCheckboxes) {
            if (checkBox.isSelected()) {
                String food = allergyFoodMappings.get(checkBox.getText());
                if (!restrictedFoods.contains(food)) {
                    restrictedFoods.add(food);
                }
            }
        }
        // Notify other parts of the app about the update
        System.out.println("Updated Restricted Foods: " + restrictedFoods);
    }

    public List<String> getRestrictedFoods() {
        return restrictedFoods;
    }

    private void alignComponents() {
        for (Component comp : getContentPane().getComponents()) {
            ((JComponent) comp).setAlignmentX(Component.LEFT_ALIGNMENT);
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            SettingsTab frame = new SettingsTab();
            frame.setVisible(true);
        });
    }
}
